# Makefile.am for gtk+/clutter
include $(top_srcdir)/Makefile.decl
-include $(INTROSPECTION_MAKEFILE)

# Preamble
INTROSPECTION_GIRS =
INTROSPECTION_SCANNER_ARGS = \
	--add-include-path=../gdk \
	--warn-all
INTROSPECTION_COMPILER_ARGS = \
	--includedir=$(srcdir) \
	--includedir=. \
	--includedir=../gdk

AM_CPPFLAGS = \
	-DG_LOG_DOMAIN=\"Clutter\"			\
	-DCLUTTER_COMPILATION				\
	-I$(top_builddir)				\
	-I$(top_builddir)/clutter			\
	-I$(top_srcdir) -I../gdk			\
	-I$(top_srcdir)/gdk				\
	$(GTK_DEBUG_FLAGS)				\
	$(GTK_DEP_CFLAGS)

if PLATFORM_WIN32
no_undefined = -no-undefined
endif

# libtool stuff: set version and export symbols for resolving
# since automake doesn't support conditionalized libsomething_la_LDFLAGS
# we use the general approach here
LDADD = 					\
	$(GTK_LINK_FLAGS)			\
	-version-info $(LT_VERSION_INFO)	\
	-export-dynamic 			\
	-rpath $(libdir) 			\
	$(no_undefined)

BUILT_SOURCES =

CLEANFILES =

lib_LTLIBRARIES =

# Unconditionally built files
clutter_public_headers =
clutter_private_headers =
clutter_base_c_sources =

# Autogenerated files
clutter_public_built_headers =
clutter_public_built_sources =
clutter_private_built_headers =
clutter_private_built_sources =

# Deprecated files
deprecated_headers =
deprecated_sources =

# Keep the following lists sorted alphabetically
clutter_public_headers += \
	clutteractor.h \
	cluttermacros.h \
	cluttertypes.h

clutter_private_headers += \
	clutteractorprivate.h

clutter_base_c_sources += \
	clutteractor.c \
	clutterpoint.c \
	clutterrect.c \
	cluttersize.c

#
# Main library build rules; you should not modify anything below this point
#

# Installed headers
clutterincludedir = $(includedir)/gtk-3.0/clutter
clutterinclude_HEADERS = $(clutter_public_headers) $(clutter_public_built_headers) clutter.h

# Enumeration types
clutterenumtypes.h: stamp-clutterenumtypes.h
	@true
stamp-clutterenumtypes.h: $(clutter_public_headers) $(deprecated_h_sources) clutterenumtypes.h.template
	$(AM_V_GEN) ( cd $(srcdir) && $(GLIB_MKENUMS) --template clutterenumtypes.h.template \
		      $(clutter_public_headers) $(deprecated_h_sources) ) > xgen-gtbh \
	&& (cmp -s xgen-gtbh clutterenumtypes.h || cp xgen-gtbh clutterenumtypes.h ) \
	&& rm -f xgen-gtbh \
	&& echo timestamp > $@
clutterenumtypes.c: $(clutter_public_headers) $(deprecated_h_sources) clutterenumtypes.c.template
	$(AM_V_GEN) ( cd $(srcdir) && $(GLIB_MKENUMS) --template clutterenumtypes.c.template \
		      $(clutter_public_headers) $(deprecated_h_sources) ) > xgen-gtbc \
	&& cp xgen-gtbc $@ \
	&& rm -f xgen-gtbc

clutter_public_built_headers += clutterenumtypes.h
clutter_public_built_sources += clutterenumtypes.c
CLEANFILES += clutterenumtypes.h clutterenumtypes.c
EXTRA_DIST += clutterenumtypes.h.template clutterenumtypes.c.template

# Marshalers for closures
cluttermarshalers.h: stamp-cluttermarshalers.h
	@true
stamp-cluttermarshalers.h: cluttermarshalers.list
	$(AM_V_GEN) $(GLIB_GENMARSHAL) --prefix=clutter_marshal $(srcdir)/cluttermarshalers.list --header --valist-marshallers >> xgen-gmlh \
	&& (cmp -s xgen-gmlh cluttermarshalers.h || cp xgen-gmlh cluttermarshalers.h) \
	&& rm -f xgen-gmlh \
	&& echo timestamp > $@
cluttermarshalers.c: cluttermarshalers.list
	$(AM_V_GEN) ( echo "#include \"cluttermarshalers.h\""; \
		      $(GLIB_GENMARSHAL) --prefix=clutter_marshal $(srcdir)/cluttermarshalers.list --body  --valist-marshallers ) >> xgen-gmlc \
	&& cp xgen-gmlc $@ \
	&& rm -f xgen-gmlc

clutter_private_built_headers += cluttermarshalers.h
clutter_private_built_sources += cluttermarshalers.c
CLEANFILES += cluttermarshalers.h cluttermarshalers.c
EXTRA_DIST += cluttermarshalers.list

all_sources = \
	$(clutter_public_headers) \
	$(clutter_private_headers) \
	$(clutter_public_built_sources) \
	$(clutter_private_built_sources) \
	$(clutter_base_c_sources)

BUILT_SOURCES += \
	$(clutter_public_built_headers) \
	$(clutter_public_built_sources) \
	$(clutter_private_built_headers) \
	$(clutter_private_built_sources)

libclutter_3_la_SOURCES = $(all_sources)
libclutter_3_la_CFLAGS = $(AM_CFLAGS) $(GDK_HIDDEN_VISIBILITY_CFLAGS)
libclutter_3_la_LIBADD = $(GTK_DEP_LIBS)
libclutter_3_la_LDFLAGS = $(LDADD)

lib_LTLIBRARIES += libclutter-3.la

# Introspection rules
if HAVE_INTROSPECTION
introspection_files = $(clutterinclude_HEADERS) $(clutter_base_c_sources)

Clutter-3.0.gir: $(INTROSPECTION_SCANNER) libclutter-3.la $(top_builddir)/gdk/Gdk-3.0.gir Makefile
Clutter_3_0_gir_SCANNERFLAGS = 			\
	--add-include-path=$(top_builddir)/gdk	\
	--include-uninstalled=$(top_builddir)/gdk/Gdk-3.0.gir
Clutter_3_0_gir_CFLAGS = $(AM_CPPFLAGS)
Clutter_3_0_gir_LIBS = libclutter-3.la $(top_builddir)/gdk/libgdk-3.la
Clutter_3_0_gir_FILES = $(introspection_files)
Clutter_3_0_gir_EXPORT_PACKAGES = clutter-3.0
INTROSPECTION_GIRS += Clutter-3.0.gir

girdir = $(datadir)/gir-1.0
gir_DATA = $(INTROSPECTION_GIRS)

typelibsdir = $(libdir)/girepository-1.0
typelibs_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)

CLEANFILES += $(gir_DATA) $(typelibs_DATA)
endif

-include $(top_srcdir)/git.mk
